Id CommandLine                                                                                           
  -- -----------                                                                                           
   1 Write-Host "hello NTMs"                                                                               
   2 Write-Host | gm                                                                                       
   3 Write-Host |Get-Member                                                                                
   4 Write-Host |Get-Member                                                                                
   5 Write-Host "hello NTMs"...                                                                            
   6 Get-Help Write-Host                                                                                   
   7 Write-Host "Hello NTMS" -BackgroundColor Green -ForegroundColor Cyan                                  
   8 Write-Host "Hello NTMS" -BackgroundColor Green -ForegroundColor DarkRed                               
   9 Write-Host "Hello NTMS" -BackgroundColor Green -ForegroundColor DarkRed                               
  10 Write-Host | Get-Member                                                                               
  11 Get-Help Write-Host -Examples                                                                         
  12 Write-Output "Hello NTMS" | Get-Member...                                                             
  13 Read-Host...                                                                                          
  14 Read-Host                                                                                             
  15 Read-Host                                                                                             
  16 $var=your name is                                                                                     
  17 $var="your name is"                                                                                   
  18 Write-Host "Your name is" $var                                                                        
  19 $var="sameer"                                                                                         
  20 Write-Host "Your name is" $var                                                                        
  21 $name=Read-Host...                                                                                    
  22 $name=Read-Host...                                                                                    
  23 Write-Host "your name is $name"...                                                                    
  24 Read-Host -Prompt...                                                                                  
  25 Get-Help Read-Host -Examples                                                                          
  26 Read-Host -Prompt test                                                                                
  27 Read-Host -Prompt Name                                                                                
  28 Read-Host -Prompt Fullname                                                                            
  29 Read-Host -Prompt Fullname, lastname                                                                  
  30 $fullname...                                                                                          
  31 $fullname=sameer...                                                                                   
  32 $fullname="sameer"...                                                                                 
  33 $lastname="iswe"...                                                                                   
  34 $fullname                                                                                             
  35 $firstname=Read-Host -Prompt "First name"...                                                          
  36 $lastname=Read-Host -Prompt "Last Name"...                                                            
  37 Write-Host "your fulle name is $firstname $lastname"                                                  
  38 Write-Host "your full name is $firstname $lastname"                                                   
  39 $firstnumber=Read-Host -Prompt "First Number"...                                                      
  40 $secondnumber=Read-Host -Prompt "second number"...                                                    
  41 write-host " your addition is $firstname+$secondnumber"                                               
  42 $var1=$firstname+$secondnumber...                                                                     
  43 $firstnumber=Read-Host -Prompt "First Number"...                                                      
  44 $secondnumber=Read-Host -Prompt "second number"...                                                    
  45 $firstnumber                                                                                          
  46 $firstnumber+$secondnumber                                                                            
  47 Get-Help "+"                                                                                          
  48 $firstnumber | gm                                                                                     
  49 [int]$firstnumber=Read-Host -Prompt "First Number"...                                                 
  50 [int]$secondnumber=Read-Host -Prompt "second number"...                                               
  51 write-host " your addition is $firstname+$secondnumber"                                               
  52 write-host " your addition is $firstnumber+$secondnumber"                                             
  53 write-host " your addition is" $firstnumber+$secondnumber                                             
  54 [int]$secondnumber=Read-Host -Prompt "second number"...                                               
  55 [int]$firstnumber=Read-Host -Prompt "First Number"...                                                 
  56 $totlal=$firstnumber+$secondnumber...                                                                 
  57 [int]$fimberstnur=Read-Host -Prompt "First Number"...                                                 
  58 $testarray=@(green, yellow, "Sameer")                                                                 
  59 $testarray=@(green,yellow,Sameer)                                                                     
  60 $testarray=@("green","yellow","Sameer")                                                               
  61 $testarray                                                                                            
  62 $testarray | gm                                                                                       
  63 $testarray.Count                                                                                      
  64 $testarray.Contains(sameer)                                                                           
  65 $testarray.Contains(sameer                                                                            
  66 $testarray.Contains("sameer")                                                                         
  67 $testarray.Contains(sameer)                                                                           
  68 $testarray.Contains(1)                                                                                
  69 $testarray=@("green","yellow","Sameer",1)                                                             
  70 $testarray.Contains(1)                                                                                
  71 $testarray.Contains(sameer)                                                                           
  72 $testarray.Contains("sameer")                                                                         
  73 $testarray.Contains("Sameer")                                                                         
  74 $testarray.[0]                                                                                        
  75 $testarray[0]                                                                                         
  76 $testarray[-1]                                                                                        
  77 $testarray[-2]                                                                                        
  78 $testarray[-3]                                                                                        
  79 $testarray[-4]                                                                                        
  80 $testarray+=3                                                                                         
  81 $testarray                                                                                            
  82 $testarray-=2                                                                                         
  83 $testarray.Remove(3)                                                                                  
  84 $testarray.Remove(1)...                                                                               
  85 $testarray.Remove(1)...                                                                               
  86 $testarray.Remove("green")...                                                                         
  87 $testarray.Remove(0)                                                                                  
  88 $testarray.Remove[0]                                                                                  
  89 $testarray                                                                                            
  90 $testarray | gm                                                                                       
  91 Get-Member -InputObject $testarray                                                                    
  92 $hashtable=@{name="Sameer"; lastname="Iswe"}...                                                       
  93 $hashtable=@{name="Sameer"; lastname="Iswe"}...                                                       
  94 $hashtable                                                                                            
  95 $hashtable | gm                                                                                       
  96 $hashtable                                                                                            
  97 $hashtable["name"]                                                                                    
  98 $hashtable["lastname"]                                                                                
  99 $hashtable.Count                                                                                      
 100 $hashtable.Values                                                                                     
 101 $hashtable.Remove("Iswe")                                                                             
 102 $hashtable.Values                                                                                     
 103 $hashtable.Contains("iswe")                                                                           
 104 $hashtable.Contains("Iswe")                                                                           
 105 $hashtable.ContainsKey("Iswe")                                                                        
 106 $hashtable.ContainsKey(Iswe)                                                                          
 107 $hashtable.ContainsKey[Iswe]                                                                          
 108 $hashtable.ContainsKey["Iswe"]                                                                        
 109 $hashtable.IsReadOnly                                                                                 
 110 $hashtable.ContainsValue(Iswe)                                                                        
 111 $hashtable.ContainsValue("Iswe")                                                                      
 112 get-help about_Arrays                                                                                 
 113 Get-Service | Stop-Process                                                                            
 114 Get-Service | Stop-Process                                                                            
 115 Get-Process                                                                                           
 116 Get-Help Stop-Process -ShowWindow                                                                     
 117 Get-Process | gm                                                                                      
 118 Get-Service | Where-Object {$_.Name -eq "*win*"}                                                      
 119 Get-Service | Where-Object {$_.Name -eq "win"}                                                        
 120 Get-Service -Name bits | Where-Object {$_.Name -eq "win"}                                             
 121 Get-Service -Name bits | Where-Object {$_.Name }                                                      
 122 Get-Service -Name bits | Where-Object {$_.Name}                                                       
 123 Get-Service | Where-Object {$_.DisplayName}                                                           
 124 Get-Service | Where-Object {$_.DisplayName -eq "Computer Browser"}                                    
 125 Get-Service | Where-Object {$_.DisplayName $_.Name -eq "Computer Browser"}                            
 126 Get-Service | Where-Object {$_.DisplayName $_.Name -eq "Bluetooth Handsfree Service"}                 
 127 Get-Service | Where-Object {$_.DisplayName, $_.Name -eq "Bluetooth Handsfree Service"}                
 128 Get-Process | Where-Object {$_.Id -gt "500"}                                                          
 129 Get-Process | Where-Object {$_.VM -gt "100"}                                                          
 130 Get-Process | Where-Object {$_.WS -gt "100"}                                                          
 131 Get-Process | Where-Object {$_.WS -gt "100mb"}                                                        
 132 Get-ChildItem -Directory C:\Windows                                                                   
 133 Get-ChildItem "c:\" | Where-Object {$_.Directory}                                                     
 134 Get-ChildItem "c:\" | Where-Object {$_.Directory -ilike "Folder"}                                     
 135 Get-ChildItem "C:\Windows"                                                                            
 136 Get-ChildItem "C:\Windows" | gm                                                                       
 137 Get-Item "C:\Windows" | gm | Out-File                                                                 
 138 Get-Item "C:\Windows" | gm | Out-File -FilePath c:\file.txt                                           
 139 Get-Item "C:\file.txt" | gm | Out-File -FilePath c:\fileitem.txt                                      
 140 Get-ChildItem "C:\Windows" | Where-Object {$_.psiscontainer $true}                                    
 141 Get-ChildItem "C:\Windows" | Where-Object {$_.psiscontainer -eq $true}                                
 142 Get-ChildItem | gm                                                                                    
 143 Get-ChildItem | gm                                                                                    
 144 Get-ChildItem | select size | Get-Process                                                             
 145 Get-ChildItem | gm                                                                                    
 146 Get-ChildItem                                                                                         
 147 Get-ChildItem | gm                                                                                    
 148 Get-ChildItem | select Length, Lastwritetime | Get-Process                                            
 149 Get-ChildItem | gm                                                                                    
 150 Get-ChildItem | select Mode, @{n="id" ,e="{$_.lenght}"}                                               
 151 Get-ChildItem C:\Windows | select Mode, @{n="id",e="$_.Length}"}                                      
 152 Get-ChildItem C:\Windows | select Mode, @{n="id",e="{$_.Length}"}                                     
 153 Get-ChildItem C:\Windows | select Mode, @{n="id",e={$_.Length}}                                       
 154 Get-ChildItem C:\Windows | select Mode, @{n=id,e={$_.Length}}                                         
 155 Get-ChildItem C:\Windows | select Mode, @{n=id,e=$_.Length}                                           
 156 Get-ChildItem C:\Windows | select Mode, @{"n=id,e=$_.Length"}                                         
 157 Get-ChildItem | select Mode, @{"n=id,e=$_.Length"}                                                    
 158 Get-ChildItem C:\Windows | select Mode, @{"n=id;e=$_.Length"}                                         
 159 Get-ChildItem C:\Windows | select Mode, @{n=id ; e=$_.Length}                                         
 160 Get-ChildItem C:\Windows | select Mode, @{n="id" ; e="{$_.Length}"}                                   
 161 Get-Service -ComputerName                                                                             
 162 hostname                                                                                              
 163 Get-Service | gm                                                                                      
 164 Get-Service | gm | Out-File                                                                           
 165 Get-Service | gm | Out-GridView                                                                       
 166 Get-Service | select Displayname | Get-Service                                                        
 167 Get-Service | select Displayname | Out-File                                                           
 168 Get-Service | select Displayname | Out-File -FilePath c:\t1.txt                                       
 169 Invoke-Item C:\t1.txt                                                                                 
 170 Get-Service -DisplayName (Get-Content C:\t1.txt)                                                      
 171 Get-Service -DisplayName (Get-Content "C:\t1.txt")                                                    
 172 Get-Service -DisplayName (Get-Content -Path C:\t1.txt)                                                
 173 Get-Service -DisplayName (Get-Content -Path "C:\t1.txt")                                              
 174 Get-Service -DisplayName (Get-Content -Path C:\t1.txt)                                                
 175 Get-Service -DisplayName (Get-Content -Path [C:\t1.txt])                                              
 176 Get-Service -DisplayName (Get-Content -Path C:\t1.txt)                                                
 177 Get-History                                                                                           
 178 Get-Service -DisplayName                                                                              
 179 Get-Help *displayname* -Examples                                                                      
 180 Get-Service | select DisplayName                                                                      
 181 Get-Service | select DisplayName | Out-File -FilePath c:\new.txt                                      
 182 Get-Content C:\new.txt                                                                                
 183 Get-Help Get-Content -Examples                                                                        
 184 Get-Service -DisplayName (Get-Content -Path C:\t1.txt -Include)                                       
 185 Get-Service -DisplayName (Get-Content -Path C:\t1.txt -TotalCount)                                    
 186 Get-Service -ComputerName (Get-Content C:\new.txt)                                                    
 187 Get-Service -ComputerName                                                                             
 188 Get-Service -ComputerName localhost                                                                   
 189 Get-Service -ComputerName localhost (Get-Content -Path C:\new.txt)
 
 ## 3/11/18
 # For Loop 
 $b=@(1,2,3,4)
for ($c=0;$c -le 4;$c++)
{$b[$c]}

$1="*"
for ($d=0;$d -le 5;$d++){Write-Host $1}

for ($e=4;$e -ge 1;$e--)
{for($f=0;$f -lt $e;$f++){Write-Host "*" -NoNewline} Write-Host ""}


for ($e=1;$e -le 4;$e++)
    {
        for($f=0;$f -lt $e;$f++)
            {
                Write-Host "*" -NoNewline
            }

       Write-Host ""
    }
   ## how to create multipfile 
   
   for($f=1.txt; $f -le 10;$f++) 
{remove-Item -ItemType file -Path C:\sameer\$f.txt}

#while 

while(Get-Process -Name "notepad")
{ Stop-Process -name "notepad"
}

    
    
    
  # how to remove multiple file using foreach
   $files=Get-ChildItem -Path C:\sameer
foreach($file in $files)
{
Remove-Item -Path C:\sameer\$file
} 

## if codition 

$date=(get-date).AddYears(-3)
 $files=Get-ChildItem -Path C:\Windows\System32 *.dll
foreach($file in $files)
{
if($file.CreationTime -lt $date)
  { Write-Host " this file $file.name is older then 2015" -BackgroundColor Blue
  }
  else
  {
  Write-Host "this file $file.name not older then 2015" -BackgroundColor Green
  }
}

# new example 

$oldstate=Import-Csv C:\process1.txt
$newstate=get-process
foreach ($new in $newstate)
{
if ($oldstate |? {$_.name -eq $new.Name})
{ Write-Host "no worries"
}
else
{$new.Name |Out-File -FilePath c:\report.text -Append
}
}

#17/11/2018
1) below commond use to output using pipe 
Get-Service | Export-Csv -Path C:\sameer\services.csv -Delimiter "|"

2) get process of all computer from exporting csv

$comps= Get-Content -Path C:\sameer\comname.txt
foreach ($comp in $comps)
{ "fetching details from $comp | out-file -path c:\sameer\tst.csv -append
get-process -computername -$comp |out-file -path c:\sameer\tst.csv -append
}


##

$start=0
$send=$comps.Length -1

for ($start;$start -le $send; $start++)
{ $one=$comps[$start] 
"fetching details from $one"
}

## contiune a,b,c,d

$start=65
$end=91
for ($start;$start -le $end;$start++)
{ Write-Host $([char]$start)
}

For small alphablate value 

$start=65
$end=90
$small=([char]65).ToString().ToLower()
for ($start;$start -le $end;$start++)
{ Write-Host $([char]$start).ToString().ToLower()
}

# to get information from all the services

$services= Get-Service
foreach ($service in $services)
{ Write-Host "the display name of $($service.Name) is $($service.DisplayName)"
}

# to get information from all process

$process= Get-Process
foreach ($proces in $process)
{ Write-Host " the ID of $($proces.Id) is $($proces.ProcessName)"
}


##

for($f=1;$f -le 10;$f++)
{
    New-Item -Path C:\sameer\$f.log -ItemType file
    
    
## All service startup #24/11/2018

$services= Get-Service 

 foreach ($service in $services)
 { $service.StartType

    if ( $service.StartType -eq "Automatic")
          { Write-Host " This $service.name startup is Automatic"
          }
    elseif ( $service.StartType -eq "Manual")
           { Write-Host " This $service.name startup is Manual"
           }
    else
           { Write-Host " this $service.name startup is Disabled"
           }
    }
    
    # spacifi servic in details 
    
    $services= Get-Service 

 foreach ($service in $services)
 { $service.StartType

    if ( $service.StartType -eq "Automatic")
          { Write-Host " This $($service.DisplayName) startup is Automatic"
          }
    elseif ( $service.StartType -eq "Manual")
           { Write-Host " This $($service.DisplayName) startup is Manual"
           }
    else
           { Write-Host " this $($service.DisplayName) startup is Disabled"
           }
    }
    
    ## out put want in csv format 
    
    $services= Get-Service 
$info = ""
 foreach ($service in $services)
 { $service.StartType

    if ( $service.StartType -eq "Automatic")
          { $info= " This $($service.DisplayName) startup is Automatic"
          }
    elseif ( $service.StartType -eq "Manual")
           { $info=" This $($service.DisplayName) startup is Manual"
           }
    else
           { $info= " this $($service.DisplayName) startup is Disabled"
           }
    } 

    $info | Out-File -FilePath C:\sameer\temp.csv -Append
 
 
 # another way for service - use case " switch" 
 
 $services= Get-Service 
$info = ""
 foreach ($service in $services)
 {
   Switch ($service.StartType)
   {
   "Automatic" {$info= "This $($service.DisplayName) is Automatic"}
      
       "Manual" {$info= "This $($service.DisplayName) is Manual"}
        
      "Disabled" {$info= "This $($service.DisplayName) is Disabled"}
      }
      $info | Out-File -FilePath C:\sameer\se4.txt -Append
  }


## regular expression 

$var= Read-Host

if ($var -match "^([a-z]{3}\-[a-z]{2}\-[a-z]{1})$")

{ Write-Host "this condition true"
}

else 
  { Write-Host "this condition is false"
  }
  
  
  ###### While condition use####
  
  $condition = $true
while($condition)
{
#Ask for input

    $xinup=Read-host 

    #Validate the input
    If ($xinup -match "^[win]{3}\-[sr]{2}\-[s]{1}$")
    {

        Write-Host "You are correct"
        $condition= $false
    }
    else
    {
        Write-Host "You are wrong"
    }
}

## object



$users = New-Object System.Object
$users | Add-Member -MemberType NoteProperty -Name "fname" -Value "Dinesh"
$users | Add-Member -MemberType NoteProperty -Name "lName" -Value "Patil"
$users | Add-Member -MemberType ScriptMethod -Name "samaccount"-Value {"$($($this.fname).substring(0,1))"+"$($this.lName)"}


$azurevm = New-Object System.Object
$azurevm | Add-Member -MemberType noteProperty -Name "note" -Value "my vm"
$azurevm | Add-Member -MemberType NoteProperty -Name status -Value "runining"

######1/12/2018####

"28-06-1988" -match "^(0?[1-9]|[12][0-9]|3[0-1])[-]|(0?[1-9]|1[0-2])[-]|\d\d)"


 Id CommandLine                                                                                                            
  -- -----------                                                                                                            
   1 "28-06-1988" -match "^(0?[1-9]|[12][0-9]|3[0-1])[-]|(0?[1-9]|1[0-2])[-]|\d\d)"                                         
   2 "28-06-1988" -match "^(0?[1-9]|[12][0-9]|3[0-1])[-]|(0?[1-9]|1[0-2])[-]|\d\d)$"                                        
   3 "28-06-1988" -match "^(0?[1-9]|[12][0-9]|3[0-1])[-]|(0?[1-9]|1[0-2])[-]|\d\d$"                                         
   4 "28-06-1988" -match "^(0?[1-9]|[12][0-9]|3[0-1])[-](0?[1-9]|1[0-2])[-]\d\d$"                                           
   5 "28-06-88" -match "^(0?[1-9]|[12][0-9]|3[0-1])[-](0?[1-9]|1[0-2])[-]\d\d$"
   
   
   ##### Credentials ########
   
   $cred= Get-Credential

$cred | Get-Member

TypeName: System.Management.Automation.PSCredential

## TO save password to run 


$username= "Administrator"
$password= "ntms" | ConvertTo-SecureString -AsPlainText -Force

$cred= New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $username, $password

## convert secure string password 

$pass = $password | ConvertFrom-SecureString

$pass | Out-File -FilePath C:\sameer\ps2.txt

##

$passw = Get-Content -Path C:\sameer\ps2.txt | ConvertTo-SecureString

## find powershell profile path

  $profile
  
  New-Item -Path C:\Users\Administrator\Documents\WindowsPowerShell\Microsoft.PowerShellISE_profile.ps1 -ItemType file -Force
invoke-item $profile


### PS Custom object 

$hashtable=@{fname="dinesh"
             lname="Patile" }

$object=[pscustomobject] $hashtable

### another way
- user above hashtable variable 
New-Object pscustomobject -Property $hashtable

1)? = option
2) [] = single charchter
3) () = group
4) | = or
5) {} = 

#######################################################################################################################################

7/12/2018

1) Powershell class

Ex:- 

Class VM
  {
           $name
     [string]status()
     
        { return "Stopped" 
      }           
                
                }


2)  create self sign certificate

New-SelfSignedCertificate -DnsName $comp -CertStoreLocation "Cert:\LocalMachine\my"


PSRemoting  

Enable-PSRemoting on remote machine 
5985
5986 - port for remote connection

$username = Vinyak
$password = ntms
$cred = Get-Credential

Enter-PSSession -ComputerName pc2 -Credential $cred 

$comp = ($env:COMPUTERNAME)

$comp
## how to create certificate

New-SelfSignedCertificate -DnsName $comp -CertStoreLocation "Cert:\LocalMachine\my"

use certificate for https listner 

New-Item -Path WSMan:\localhost\Listener -Transport HTTPS -Address * -CertificateThumbPrint 80302973D9657E4F841259150831F2EDD76DDD50

Get-Item WSMan:\localhost\Client\TrustedHosts

Set-Item WSMan:\localhost\Client\TrustedHosts -Value 1.1.1.1

Set-Item WSMan:\localhost\Client\TrustedHosts -Value 1.1.1.1 -Concatenate -Force

$ps = New-PSSessionOption -SkipCACheck

Enter-PSSession -ComputerName pc2 -Credential $cred -Port 5986 -SessionOption $ps -UseSSL

Invoke-Command -ComputerName pc2 -Credential $cred -UseSSL -Port 5986 -SessionOption $ps -ScriptBlock {hostname}


Invoke-Command -ComputerName pc2 -Credential $cred -UseSSL -Port 5986 -SessionOption $ps -ScriptBlock {Get-Service | Where-Object {$_.status -eq "stopped"}}



