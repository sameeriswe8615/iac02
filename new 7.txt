Testing Powershell with Pester

https://mva.microsoft.com/en-US/training-courses/using-powershell-for-active-directory-8397?l=zSaBLJJz_1304984382

https://mva.microsoft.com/en-US/training-courses/testing-powershell-with-pester-17650?l=mg8oBM9vD_8811787177
Ashley McGlone, Adam Bertram Powershell 5.0

below module which we need to import
find-module -name pester
install-module -name pester



# other attribute for Proxy address

  -OtherAttributes @{'proxyAddresses'='SIP:email1@yourdomain','SMTP:email1@yourdomain','smtp:email2@altdomain'}
  
# create New user with Proxy address

Create new user::

New-ADUser -Name "John Doe" -AccountPassword (Read-Host -AsSecureString "Hello!!.6690") -CannotChangePassword $false -ChangePasswordAtLogon $false -City "Lima" -Company "CompanyDomain" -Country "PE" -DisplayName "John Doe" -EmailAddress "jdoe@CompanyDomain.pe" -EmployeeID "jdoe" -Enabled $true -Fax "(51 1) 221 xxxx" -GivenName "John" -HomeDirectory "\\SVFS001\users\jdoe" -HomeDrive "U:" -Initials "JD" -OfficePhone "" -Organization "Socios" -OtherAttributes @{'proxyAddresses'='SIP:jdoe@CompanyDomain.pe','SMTP:jdoe@CompanyDomain.pe','smtp:jdoe@CompanyDomain.com.pe','smtp:jdoe@CompanyDomain.com.pe'} -PasswordNeverExpires $false -SamAccountName "jdoe" -Surname "Doe" -Title "Hero!" -Type "User" -UserPrincipalName "jdoe@CompanyDomain.pe"


# Disbale inactive account (users, computers, groups )

  1) Find the stale accounts ( Users, groups, computer etc)
  2) Disable after X days, Update object description
  3) Delete them after X More days 
  4) If computer then delete some DNS record.
  5) If any one complain then restore AD object
  
# Last logon
Search-ADAccount -AccountInactive -useronly | Out-GridView

# Time Span
Search-ADAccount -AccountInactive -useronly -timespan(new-timespan -days90) | Out-GridView



#How to identify a Stale Account ? 

#This criteriaâ€™s might be used to identify a stale account ? 
#- User Password has not been changed for more than 90 days (Pwdlastset attribute) 
#- Computer Password has not been changed for more than 60 days (Pwdlastset attribute) 
#& 
#- User Account last logon > 90 days (LastLogonTimeStamp attribute) 
#- Computer Account last logon > 60 days (LastLogonTimeStamp attribute) 
 
# 1- Create variable 
$d = [DateTime]::Today.AddDays(-60) 
$a = [DateTime]::Today.AddDays(-90) 
 
Import-Module ActiveDirectory 
 
#- Computer Account last logon > 60 days (LastLogonTimeStamp attribute) 
#- Computer Password has not been changed for more than 60 days (Pwdlastset attribute) 
 
Get-ADComputer -filter 'LastLogonTimeStamp -lt $d' -Properties LastLogonTimeStamp | Move-ADObject -TargetPath "OU=Stale Machines (LastLogonTimeStamp),DC=Contoso,DC=local" 
Get-ADComputer -filter 'PwdLastSet -lt $d'  -Properties PwdLastSet | Move-ADObject -TargetPath "OU=Stale Machines (Pwdlastset),DC=Contoso,DC=local" 
 
#- User Account last logon > 90 days (LastLogonTimeStamp attribute) 
#- User Password has not been changed for more than 90 days (Pwdlastset attribute) 
 
Get-ADUser -filter 'LastLogonTimeStamp -lt $a'  -Properties LastLogonTimeStamp | Move-ADObject -TargetPath "OU=Stale Accounts (LastLogonTimeStamp),DC=Contoso,DC=local" 
Get-ADUser -filter 'PwdLastSet -lt $a'  -Properties PwdLastSet | Move-ADObject -TargetPath "OU=Stale Accounts (Pwdlastset),DC=Contoso,DC=local"


# Function to Find, Disable and Move Stale Active Directory Accounts

Disable-ADStaleAccount -Domain contoso `

                                     -StaleThreshold 150 `

                                     -AccountType Computer `

                                     -SourceOu "OU=Computer Accounts,DC=contoso,DC=com" `

                                     -TargetOu "OU=Disabled,OU=Computer Accounts,DC=contoso,DC=com" `

                                     -Disable `

                                     -WhatIf
									 
									 
# Disable - Remove - Stale AD Computer objects

  $1year = (Get-Date).AddDays(-365) # The 365 is the number of days from today since the last logon. 
$1y1m = (Get-Date).AddDays(-395) 
 
# Disable computer objects and move to disabled OU (Older than 1 year): 
Get-ADComputer -Property Name,lastLogonDate -Filter {lastLogonDate -lt $1year} | Set-ADComputer -Enabled $false 
Get-ADComputer -Property Name,Enabled -Filter {Enabled -eq $False} | Move-ADObject -TargetPath "OU=Disabled Computers,DC=my,DC=domain,DC=local" 
 
# Delete Older Disabled computer objects: 
Get-ADComputer -Property Name,lastLogonDate -Filter {lastLogonDate -lt $1y1m} | Remove-ADComputer